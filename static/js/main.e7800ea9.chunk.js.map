{"version":3,"sources":["firebase.js","Todo.js","App.js","reportWebVitals.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","TodoListItem","todo","inprogress","id","style","display","ListItem","ListItemText","primary","secondary","Button","onClick","collection","doc","update","delete","App","useState","input","setInput","todos","setTodos","useEffect","onSnapshot","querySnapshot","docs","map","data","className","onSubmit","e","preventDefault","add","timestamp","FieldValue","serverTimestamp","type","name","placeholder","autoComplete","onChange","target","value","Todo","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sQAceA,EAZKC,IAASC,cAAc,CACzCC,OAAQ,0CACRC,WAAY,8BACZC,UAAW,cACXC,cAAe,0BACfC,kBAAmB,gBACnBC,MAAO,6CACPC,cAAe,iBAGMC,Y,QCqBRC,MA3Bf,YAAiD,IAAzBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,WAAYC,EAAM,EAANA,GAWxC,OACE,sBAAKC,MAAO,CAAEC,QAAS,QAAvB,UACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACEC,QAASP,EACTQ,UAAWP,EAAa,cAAgB,6BAI5C,cAACQ,EAAA,EAAD,CAAQC,QAnBZ,WACEtB,EAAGuB,WAAW,SAASC,IAAIV,GAAIW,OAAO,CACpCZ,YAAaA,KAiBb,SACGA,EAAa,OAAS,WAEzB,cAACQ,EAAA,EAAD,CAAQC,QAhBZ,WACEtB,EAAGuB,WAAW,SAASC,IAAIV,GAAIY,UAe7B,mBCwCSC,MA9Df,WAAgB,IAAD,EACaC,mBAAS,IADtB,mBACNC,EADM,KACCC,EADD,OAEaF,mBAAS,IAFtB,mBAENG,EAFM,KAECC,EAFD,KAgCb,OA5BAC,qBAAU,WAKRjC,EAAGuB,WAAW,SAASW,YAAW,SAAUC,GAC1CH,EACEG,EAAcC,KAAKC,KAAI,SAACb,GAAD,MAAU,CAC/BV,GAAIU,EAAIV,GACRF,KAAMY,EAAIc,OAAO1B,KACjBC,WAAYW,EAAIc,OAAOzB,qBAR5B,IA2BD,sBAAK0B,UAAU,MAAf,UACE,oBAAIA,UAAU,UAAd,qBACA,uBAAMC,SAfV,SAAsBC,GACpBA,EAAEC,iBAEF1C,EAAGuB,WAAW,SAASoB,IAAI,CACzB9B,YAAY,EACZ+B,UAAW3C,IAASS,UAAUmC,WAAWC,kBACzClC,KAAMiB,IAGRC,EAAS,KAMP,UACE,uBACEiB,KAAK,OACLjC,GAAG,OACHkC,KAAK,OACLC,YAAY,uBACZC,aAAa,MACbC,SAAU,SAACV,GAAD,OAAOX,EAASW,EAAEW,OAAOC,QACnCA,MAAOxB,IAET,wBAAQU,UAAU,UAAUQ,KAAK,SAAjC,yBAIF,qBAAKR,UAAU,KAAf,SACGR,EAAMM,KAAI,SAACzB,GAAD,OACT,cAAC0C,EAAD,CACE1C,KAAMA,EAAKA,KACXC,WAAYD,EAAKC,WACjBC,GAAIF,EAAKE,cCjDNyC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e7800ea9.chunk.js","sourcesContent":["import firebase from \"firebase\";\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n  apiKey: \"AIzaSyAaiJIuFw5HZimR-q86lpkFeCRJ1ZbK51Q\",\r\n  authDomain: \"todos-3588d.firebaseapp.com\",\r\n  projectId: \"todos-3588d\",\r\n  storageBucket: \"todos-3588d.appspot.com\",\r\n  messagingSenderId: \"1005557120806\",\r\n  appId: \"1:1005557120806:web:4ba74dcc69619b1bdd0be7\",\r\n  measurementId: \"G-T5NTG5GXVN\",\r\n});\r\n\r\nconst db = firebaseApp.firestore();\r\n\r\nexport default db;\r\n","import React from \"react\";\r\nimport \"./stylesheet.css\";\r\nimport { ListItem, ListItemText, Button } from \"@material-ui/core\";\r\nimport db from \"./firebase\";\r\nimport \"./stylesheet.css\";\r\n\r\nfunction TodoListItem({ todo, inprogress, id }) {\r\n  function toggleInProgress() {\r\n    db.collection(\"todos\").doc(id).update({\r\n      inprogress: !inprogress,\r\n    });\r\n  }\r\n\r\n  function deleteTodo() {\r\n    db.collection(\"todos\").doc(id).delete();\r\n  }\r\n\r\n  return (\r\n    <div style={{ display: \"flex\" }}>\r\n      <ListItem>\r\n        <ListItemText\r\n          primary={todo}\r\n          secondary={inprogress ? \"In Progress\" : \"☑️ Completed\"}\r\n        />\r\n      </ListItem>\r\n\r\n      <Button onClick={toggleInProgress}>\r\n        {inprogress ? \"Done\" : \"UnDone\"}\r\n      </Button>\r\n      <Button onClick={deleteTodo}>X</Button>\r\n    </div>\r\n  );\r\n}\r\nexport default TodoListItem;\r\n","import \"./App.css\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport TodoListItem from \"./Todo\";\r\nimport \"./stylesheet.css\";\r\nimport firebase from \"firebase\";\r\nimport db from \"./firebase\";\r\n\r\nfunction App() {\r\n  const [input, setInput] = useState(\"\");\r\n  const [todos, setTodos] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getTodos();\r\n  }, []);\r\n\r\n  function getTodos() {\r\n    db.collection(\"todos\").onSnapshot(function (querySnapshot) {\r\n      setTodos(\r\n        querySnapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          todo: doc.data().todo,\r\n          inprogress: doc.data().inprogress,\r\n        }))\r\n      );\r\n    });\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    db.collection(\"todos\").add({\r\n      inprogress: true,\r\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n      todo: input,\r\n    });\r\n\r\n    setInput(\"\");\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1 className=\"heading\">T O D O</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          id=\"todo\"\r\n          name=\"text\"\r\n          placeholder=\"Create a new todo...\"\r\n          autoComplete=\"off\"\r\n          onChange={(e) => setInput(e.target.value)}\r\n          value={input}\r\n        />\r\n        <button className=\"addtodo\" type=\"submit\">\r\n          ADD TODO\r\n        </button>\r\n      </form>\r\n      <div className=\"bg\">\r\n        {todos.map((todo) => (\r\n          <TodoListItem\r\n            todo={todo.todo}\r\n            inprogress={todo.inprogress}\r\n            id={todo.id}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}